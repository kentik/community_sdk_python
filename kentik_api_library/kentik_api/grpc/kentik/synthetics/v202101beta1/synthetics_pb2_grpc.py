# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from kentik.synthetics.v202101beta1 import \
    synthetics_pb2 as \
    kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2


class SyntheticsDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHealthForTests = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsDataService/GetHealthForTests",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetHealthForTestsRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetHealthForTestsResponse.FromString,
        )
        self.GetTraceForTest = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsDataService/GetTraceForTest",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTraceForTestRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTraceForTestResponse.FromString,
        )


class SyntheticsDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetHealthForTests(self, request, context):
        """Get health data for a set of tests"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetTraceForTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_SyntheticsDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetHealthForTests": grpc.unary_unary_rpc_method_handler(
            servicer.GetHealthForTests,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetHealthForTestsRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetHealthForTestsResponse.SerializeToString,
        ),
        "GetTraceForTest": grpc.unary_unary_rpc_method_handler(
            servicer.GetTraceForTest,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTraceForTestRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTraceForTestResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "kentik.synthetics.v202101beta1.SyntheticsDataService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SyntheticsDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetHealthForTests(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsDataService/GetHealthForTests",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetHealthForTestsRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetHealthForTestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetTraceForTest(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsDataService/GetTraceForTest",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTraceForTestRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTraceForTestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )


class SyntheticsAdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAgents = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/ListAgents",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListAgentsRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListAgentsResponse.FromString,
        )
        self.GetAgent = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/GetAgent",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetAgentRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetAgentResponse.FromString,
        )
        self.PatchAgent = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/PatchAgent",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchAgentRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchAgentResponse.FromString,
        )
        self.DeleteAgent = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/DeleteAgent",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteAgentRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteAgentResponse.FromString,
        )
        self.ListTests = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/ListTests",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListTestsRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListTestsResponse.FromString,
        )
        self.CreateTest = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/CreateTest",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.CreateTestRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.CreateTestResponse.FromString,
        )
        self.GetTest = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/GetTest",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTestRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTestResponse.FromString,
        )
        self.SetTestStatus = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/SetTestStatus",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.SetTestStatusRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.SetTestStatusResponse.FromString,
        )
        self.PatchTest = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/PatchTest",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchTestRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchTestResponse.FromString,
        )
        self.DeleteTest = channel.unary_unary(
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/DeleteTest",
            request_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteTestRequest.SerializeToString,
            response_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteTestResponse.FromString,
        )


class SyntheticsAdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAgents(self, request, context):
        """Agents"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PatchAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListTests(self, request, context):
        """Tests"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetTestStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PatchTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_SyntheticsAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListAgents": grpc.unary_unary_rpc_method_handler(
            servicer.ListAgents,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListAgentsRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListAgentsResponse.SerializeToString,
        ),
        "GetAgent": grpc.unary_unary_rpc_method_handler(
            servicer.GetAgent,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetAgentRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetAgentResponse.SerializeToString,
        ),
        "PatchAgent": grpc.unary_unary_rpc_method_handler(
            servicer.PatchAgent,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchAgentRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchAgentResponse.SerializeToString,
        ),
        "DeleteAgent": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAgent,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteAgentRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteAgentResponse.SerializeToString,
        ),
        "ListTests": grpc.unary_unary_rpc_method_handler(
            servicer.ListTests,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListTestsRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListTestsResponse.SerializeToString,
        ),
        "CreateTest": grpc.unary_unary_rpc_method_handler(
            servicer.CreateTest,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.CreateTestRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.CreateTestResponse.SerializeToString,
        ),
        "GetTest": grpc.unary_unary_rpc_method_handler(
            servicer.GetTest,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTestRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTestResponse.SerializeToString,
        ),
        "SetTestStatus": grpc.unary_unary_rpc_method_handler(
            servicer.SetTestStatus,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.SetTestStatusRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.SetTestStatusResponse.SerializeToString,
        ),
        "PatchTest": grpc.unary_unary_rpc_method_handler(
            servicer.PatchTest,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchTestRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchTestResponse.SerializeToString,
        ),
        "DeleteTest": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteTest,
            request_deserializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteTestRequest.FromString,
            response_serializer=kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteTestResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "kentik.synthetics.v202101beta1.SyntheticsAdminService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SyntheticsAdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAgents(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/ListAgents",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListAgentsRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListAgentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/GetAgent",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetAgentRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetAgentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PatchAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/PatchAgent",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchAgentRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchAgentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/DeleteAgent",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteAgentRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteAgentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListTests(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/ListTests",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListTestsRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.ListTestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateTest(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/CreateTest",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.CreateTestRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.CreateTestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetTest(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/GetTest",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTestRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.GetTestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetTestStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/SetTestStatus",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.SetTestStatusRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.SetTestStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PatchTest(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/PatchTest",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchTestRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.PatchTestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteTest(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/kentik.synthetics.v202101beta1.SyntheticsAdminService/DeleteTest",
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteTestRequest.SerializeToString,
            kentik_dot_synthetics_dot_v202101beta1_dot_synthetics__pb2.DeleteTestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
