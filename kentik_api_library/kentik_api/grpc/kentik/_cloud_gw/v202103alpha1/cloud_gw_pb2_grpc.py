# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from kentik.cloud_gw.v202103alpha1 import \
    cloud_gw_pb2 as kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2


class AwsGwInternalServiceStub(object):
    """Called by clients of cloud-gw (Blake).
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProxyAws = channel.unary_unary(
                '/kentik.cloud_gw.v202103alpha1.AwsGwInternalService/ProxyAws',
                request_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ProxyAwsRequest.SerializeToString,
                response_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ProxyAwsResponse.FromString,
                )
        self.ListAwsRoles = channel.unary_unary(
                '/kentik.cloud_gw.v202103alpha1.AwsGwInternalService/ListAwsRoles',
                request_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ListAwsRolesRequest.SerializeToString,
                response_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ListAwsRolesResponse.FromString,
                )


class AwsGwInternalServiceServicer(object):
    """Called by clients of cloud-gw (Blake).
    """

    def ProxyAws(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAwsRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AwsGwInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProxyAws': grpc.unary_unary_rpc_method_handler(
                    servicer.ProxyAws,
                    request_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ProxyAwsRequest.FromString,
                    response_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ProxyAwsResponse.SerializeToString,
            ),
            'ListAwsRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAwsRoles,
                    request_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ListAwsRolesRequest.FromString,
                    response_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ListAwsRolesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kentik.cloud_gw.v202103alpha1.AwsGwInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AwsGwInternalService(object):
    """Called by clients of cloud-gw (Blake).
    """

    @staticmethod
    def ProxyAws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.cloud_gw.v202103alpha1.AwsGwInternalService/ProxyAws',
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ProxyAwsRequest.SerializeToString,
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ProxyAwsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAwsRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.cloud_gw.v202103alpha1.AwsGwInternalService/ListAwsRoles',
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ListAwsRolesRequest.SerializeToString,
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.ListAwsRolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AwsGwExternalServiceStub(object):
    """Called by cloud-api-proxy instances in transfluo & orangeflow.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoginAws = channel.unary_unary(
                '/kentik.cloud_gw.v202103alpha1.AwsGwExternalService/LoginAws',
                request_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.LoginAwsRequest.SerializeToString,
                response_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.LoginAwsResponse.FromString,
                )
        self.GetAws = channel.unary_unary(
                '/kentik.cloud_gw.v202103alpha1.AwsGwExternalService/GetAws',
                request_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.GetAwsRequest.SerializeToString,
                response_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.GetAwsResponse.FromString,
                )
        self.SendAws = channel.unary_unary(
                '/kentik.cloud_gw.v202103alpha1.AwsGwExternalService/SendAws',
                request_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.SendAwsRequest.SerializeToString,
                response_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.SendAwsResponse.FromString,
                )


class AwsGwExternalServiceServicer(object):
    """Called by cloud-api-proxy instances in transfluo & orangeflow.
    """

    def LoginAws(self, request, context):
        """LoginAws is used to tell the gateway that there's a listener active for a
        given region.  A proxy starts a LoginAws, then services Get/SendAws
        requests, and ends the LoginAws via context cancellation when it shuts
        down (or disconnects).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAws(self, request, context):
        """The client calls GetAws to get a request from the gateway.  It runs the
        request, and returns the result via SendAws, linking them together via
        request_id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendAws(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AwsGwExternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoginAws': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginAws,
                    request_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.LoginAwsRequest.FromString,
                    response_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.LoginAwsResponse.SerializeToString,
            ),
            'GetAws': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAws,
                    request_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.GetAwsRequest.FromString,
                    response_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.GetAwsResponse.SerializeToString,
            ),
            'SendAws': grpc.unary_unary_rpc_method_handler(
                    servicer.SendAws,
                    request_deserializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.SendAwsRequest.FromString,
                    response_serializer=kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.SendAwsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kentik.cloud_gw.v202103alpha1.AwsGwExternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AwsGwExternalService(object):
    """Called by cloud-api-proxy instances in transfluo & orangeflow.
    """

    @staticmethod
    def LoginAws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.cloud_gw.v202103alpha1.AwsGwExternalService/LoginAws',
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.LoginAwsRequest.SerializeToString,
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.LoginAwsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.cloud_gw.v202103alpha1.AwsGwExternalService/GetAws',
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.GetAwsRequest.SerializeToString,
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.GetAwsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendAws(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.cloud_gw.v202103alpha1.AwsGwExternalService/SendAws',
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.SendAwsRequest.SerializeToString,
            kentik_dot_cloud__gw_dot_v202103alpha1_dot_cloud__gw__pb2.SendAwsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
